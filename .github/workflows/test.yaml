name: Test

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test-install:
    name: Test Installation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        install-type: [user, project]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup test environment
      run: |
        # テスト用のディレクトリを作成
        if [ "${{ matrix.install-type }}" = "project" ]; then
          mkdir -p test-project
          cd test-project
        fi
    
    - name: Test installation
      run: |
        # インストールタイプに応じてテスト
        if [ "${{ matrix.install-type }}" = "user" ]; then
          echo "1" | bash ${{ github.workspace }}/install.sh
        else
          cd test-project
          echo "2" | bash ${{ github.workspace }}/install.sh
        fi
    
    - name: Verify installation
      run: |
        # インストールの確認
        if [ "${{ matrix.install-type }}" = "user" ]; then
          test -f "$HOME/.claude/commands/tdd.md"
          test -f "$HOME/.claude/commands/.cc-tdd-kit.json"
          test -d "$HOME/.claude/commands/shared"
          test -d "$HOME/.claude/commands/tdd"
        else
          cd test-project
          test -f ".claude/commands/tdd.md"
          test -f ".claude/commands/.cc-tdd-kit.json"
          test -d ".claude/commands/shared"
          test -d ".claude/commands/tdd"
        fi
    
    - name: Test uninstall
      run: |
        # アンインストールのテスト
        echo "y" | bash ${{ github.workspace }}/install.sh uninstall
        
        # アンインストールの確認
        if [ "${{ matrix.install-type }}" = "user" ]; then
          test ! -f "$HOME/.claude/commands/tdd.md"
        else
          cd test-project
          test ! -f ".claude/commands/tdd.md"
        fi

  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        check_together: 'yes'
        severity: 'warning'

  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run markdownlint
      uses: DavidAnson/markdownlint-cli2-action@v16
      with:
        config: '.markdownlint.json'
        globs: |
          **/*.md
          !node_modules
          !examples
